knitr::opts_chunk$set(echo = TRUE)
datos<-read_csv("https://github.com/LeobardoEnriquezH/RegressionAnalysis/blob/6c6b2877a7e4f706002fa8f6bdd39031c25f7f8f/RLS/Ejercicio5B.csv")
library(tidyverse)
library(tidyverse)
datos<-read_csv("https://github.com/LeobardoEnriquezH/RegressionAnalysis/blob/6c6b2877a7e4f706002fa8f6bdd39031c25f7f8f/RLS/Ejercicio5B.csv")
library(tidyverse)
datos<-read_csv("https://raw.githubusercontent.com/LeobardoEnriquezH/RegressionAnalysis/main/RLS/Ejercicio5B.csv?token=GHSAT0AAAAAACQDOPPU2W2CPX5V6TBBMAT2ZQFBBZQ")
View(datos)
datos<-read_csv("https://raw.githubusercontent.com/LeobardoEnriquezH/RegressionAnalysis/main/RLS/Ejercicio5B.csv?token=GHSAT0AAAAAACQDOPPU2W2CPX5V6TBBMAT2ZQFBBZQ", col_names = TRUE)
datos<-read_csv("https://raw.githubusercontent.com/LeobardoEnriquezH/RegressionAnalysis/main/RLS/Ejercicio5B.csv?token=GHSAT0AAAAAACQDOPPU2W2CPX5V6TBBMAT2ZQFBBZQ", col_names = TRUE)
datos<-read_csv("https://github.com/LeobardoEnriquezH/RegressionAnalysis/blob/main/RLS/Ejercicio5B.csv", col_names = TRUE)
datos<-read_csv("https://github.com/LeobardoEnriquezH/RegressionAnalysis/blob/6c6b2877a7e4f706002fa8f6bdd39031c25f7f8f/RLS/Ejercicio5B.csv", col_names = TRUE)
library(tidyverse)
datos<-read_csv("https://github.com/LeobardoEnriquezH/RegressionAnalysis/blob/6c6b2877a7e4f706002fa8f6bdd39031c25f7f8f/RLS/Ejercicio5B.csv", col_names = TRUE)
datos<-read_csv("https://raw.githubusercontent.com/LeobardoEnriquezH/RegressionAnalysis/main/RLS/Ejercicio5B.csv?token=GHSAT0AAAAAACQDOPPVBORH25AHGMYNGGHGZQFBEFA", col_names = TRUE)
datos<-read_csv("https://raw.githubusercontent.com/LeobardoEnriquezH/RegressionAnalysis/main/RLS/Ejercicio5B.csv?token=GHSAT0AAAAAACQDOPPVBORH25AHGMYNGGHGZQFBEFA", col_names = TRUE, show_col_types = FALSE)
datos<-read_csv("https://raw.githubusercontent.com/LeobardoEnriquezH/RegressionAnalysis/main/RLS/Ejercicio5B.csv?token=GHSAT0AAAAAACQDOPPVBORH25AHGMYNGGHGZQFBEFA", col_names = TRUE, show_col_types = FALSE)
View(datos)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
datos<-read_csv("https://raw.githubusercontent.com/LeobardoEnriquezH/RegressionAnalysis/main/RLS/Ejercicio5B.csv?token=GHSAT0AAAAAACQDOPPVBORH25AHGMYNGGHGZQFBEFA", col_names = TRUE, show_col_types = FALSE)
View(datos)
summary(datos)
library(tidyverse)
libary(stargazer)
library(tidyverse)
library(stargazer)
stargazer(datos)
#library(tidyverse) #read_csv
datos<-read_csv("https://raw.githubusercontent.com/LeobardoEnriquezH/RegressionAnalysis/main/RLS/Ejercicio5B.csv?token=GHSAT0AAAAAACQDOPPVBORH25AHGMYNGGHGZQFBEFA", col_names = TRUE, show_col_types = FALSE)
#library(tidyverse) #read_csv
datos<-read_csv("Ejercicio5B", col_names = TRUE)
#library(tidyverse) #read_csv
datos<-read_csv("Ejercicio5B.csv", col_names = TRUE)
View(datos)
summary(datos$Y)
stargazer(datos$Y)
cargaviral<-datos$Y
stargazer(cargaviral)
cargaviral<-as.data.frame(datos$Y)
stargazer(cargaviral)
cargaviral<-as.data.frame(datos$Y)
summary(cargaviral)
View(cargaviral)
cargaviral<-as.data.frame(datos$Y)
summary(cargaviral)
cargaviral<-as.data.frame(datos$Y)
summary_carga<-summary(cargaviral)
summary_carga$min
cargaviral<-as.data.frame(datos$Y)
summary_carga<-summary(cargaviral)
summary_carga[1]
min(cargaviral)
cargaviral<-as.data.frame(datos$Y)
min(cargaviral)
max<-max(cargaviral)
max<-max(cargaviral)
max
mean<-mean(cargaviral)
mean
mean<-mean(cargaviral)
mean
summary(cargaviral)
Mean(cargaviral)
mean(cargaviral)
View(cargaviral)
cargaviral<-as.data.frame(datos$Y)
min<-min(cargaviral)
max<-max(cargaviral)
mean(cargaviral, na.rm = TRUE)
View(cargaviral)
mean(datos$Y)
cargaviral<-as.data.frame(datos$Y)
min<-min(cargaviral)
max<-max(cargaviral)
mean<-mean(datos$Y)
cargaviral<-as.data.frame(datos$Y)
min<-min(cargaviral)
max<-max(cargaviral)
sd<-sd(cargaviral)
cargaviral<-as.data.frame(datos$Y)
min<-min(cargaviral)
max<-max(cargaviral)
sd<-sd(datos$Y)
mean<-mean(datos$Y)
cargaviral<-as.data.frame(datos$Y)
min<-min(datos$Y)
max<-max(datos$Y)
sd<-sd(datos$Y)
mean<-mean(datos$Y)
cargaviral<-as.data.frame(datos$Y)
#stargazer(cargaviral)
min<-min(datos$Y)
max<-max(datos$Y)
sd<-sd(datos$Y)
mean<-mean(datos$Y)
View(datos)
library(tidyverse)
library(stargazer)
library(ggplot2)
# Crear interacción entre factores
datos$Med_Edad <- interaction(datos$Med, datos$Edad)
# Definimos colores
custom_colors <- c("steelblue", "darkorange", "forestgreen", "firebrick")
# Generamos el Boxplot
ggplot(datos, aes(x = Med_Edad, y = Y, fill = Med_Edad)) +
geom_boxplot(width = 0.5, alpha = 0.7, outlier.shape = NA) +
geom_jitter(width = 0.2, height = 0, size = 3, alpha = 0.8) +
scale_fill_manual(values = custom_colors) +
labs(x = "Med & Edad", y = "Carga viral") +
ggtitle("Box Plot con Med & Edad") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
legend.title = element_blank(),
legend.position = "none"
)
#Realizamos un relevel para poner como referencia "No"
covid$Med<-relevel(covid$Med,"No")
#Realizamos un relevel para poner como referencia "No"
datos$Med<-relevel(datos$Med,"No")
#Realizamos un relevel para poner como referencia "No"
datos$Med<-relevel(datos$Med,"No")
#library(tidyverse) #read_csv
datos<-read_csv("Ejercicio5B.csv", col_names = TRUE)
#Hacemos los datos como factor
datos$Med<-factor(datos$Med)
#library(tidyverse) #read_csv
datos<-read_csv("Ejercicio5B.csv", col_names = TRUE)
#Hacemos los datos como factor
datos$Med<-factor(datos$Med)
#library(tidyverse) #read_csv
datos<-read_csv("Ejercicio5B.csv", col_names = TRUE)
#Hacemos los datos como factor
#datos$Med<-factor(datos$Med)
#library(tidyverse) #read_csv
datos<-read_csv("Ejercicio5B.csv", col_names = TRUE)
#library(tidyverse) #read_csv
datos<-read_csv("Ejercicio5B.csv", col_names = TRUE)
#Hacemos los datos como factor
#datos$Med<-factor(datos$Med)
#library(tidyverse) #read_csv
datos<-read_csv("Ejercicio5B.csv", col_names = TRUE)
#Hacemos los datos como factor
datos$Med<-factor(datos$Med)
#library(tidyverse) #read_csv
datos<-read_csv("Ejercicio5B.csv", col_names = TRUE)
#Hacemos los datos como factor
datos$Med<-factor(datos$Med)
#Realizamos un relevel para poner como referencia "No"
datos$Med<-relevel(datos$Med,"No")
#levels(datos$Med)
#library(tidyverse) #read_csv
datos<-read_csv("Ejercicio5B.csv", col_names = TRUE)
#Hacemos los datos no numericos como factor
datos$Med<-factor(datos$Med)
datos$Edad<-factor(datos$Edad)
min<-min(datos$Y)
max<-max(datos$Y)
sd<-sd(datos$Y)
mean<-mean(datos$Y)
# Crear interacción entre factores
datos$Med_Edad <- interaction(datos$Med, datos$Edad)
# Definimos colores
custom_colors <- c("steelblue", "darkorange", "forestgreen", "firebrick")
# Generamos el Boxplot
ggplot(datos, aes(x = Med_Edad, y = Y, fill = Med_Edad)) +
geom_boxplot(width = 0.5, alpha = 0.7, outlier.shape = NA) +
geom_jitter(width = 0.2, height = 0, size = 3, alpha = 0.8) +
scale_fill_manual(values = custom_colors) +
labs(x = "Med & Edad", y = "Carga viral") +
ggtitle("Box Plot con Med & Edad") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14, face = "bold"),
legend.title = element_blank(),
legend.position = "none"
)
#Realizamos un relevel para poner como referencia "No"
datos$Med<-relevel(datos$Med,"No")
#levels(datos$Med)
#Realizamos un relevel para poner como referencia "No"
datos$Med<-relevel(datos$Med,"No")
levels(datos$Med)
#Ajustamos nuestro modelo
fit<-lm(Y~Med, data = datos)
#Y mostramos el summary con stargazer
stargazer(fit)
summary(fit)
fit$coefficients[1]
b0<-fit$coefficients[1]
b0<-fit$coefficients[1]
b0
b0<-fit$coefficients[,1]
b0<-fit$coefficients[1]
b0
b0<-fit$coefficients[1]
b1<-fit$coefficients[2]
#Ajustamos nuestro modelo
datos_cortados<-datos%>%filter(Edad==">60")
View(datos_cortados)
#Ajustamos nuestro modelo
fit_c<-lm(Y~Med, data = datos_cortados)
#Y mostramos el summary con stargazer
stargazer(fit_c)
b0<-fit_c$coefficients[1]
b1<-fit_c$coefficients[2]
summary(fit_c)
# Crear interacción entre factores
datos$Med_Edad <- interaction(datos$Med, datos$Edad)
# Definimos colores
custom_colors <- c("steelblue", "darkorange", "forestgreen", "firebrick")
# Generamos el Boxplot
ggplot(datos, aes(x = Med_Edad, y = Y, fill = Med_Edad)) +
geom_boxplot(width = 0.5, alpha = 0.7, outlier.shape = NA) +
geom_jitter(width = 0.2, height = 0, size = 3, alpha = 0.8) +
scale_fill_manual(values = custom_colors) +
labs(x = "Med & Edad", y = "Carga viral") +
ggtitle("Box Plot con Med & Edad") +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 110),
axis.title = element_text(size = 12, face = "bold"),
legend.title = element_blank(),
legend.position = "none"
)
# Crear interacción entre factores
datos$Med_Edad <- interaction(datos$Med, datos$Edad)
# Definimos colores
custom_colors <- c("steelblue", "darkorange", "forestgreen", "firebrick")
# Generamos el Boxplot
ggplot(datos, aes(x = Med_Edad, y = Y, fill = Med_Edad)) +
geom_boxplot(width = 0.5, alpha = 0.7, outlier.shape = NA) +
geom_jitter(width = 0.2, height = 0, size = 3, alpha = 0.8) +
scale_fill_manual(values = custom_colors) +
labs(x = "Med & Edad", y = "Carga viral") +
ggtitle("Box Plot con Med & Edad") +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12, face = "bold"),
legend.title = element_blank(),
legend.position = "none"
)
# Crear interacción entre factores
datos$Med_Edad <- interaction(datos$Med, datos$Edad)
# Definimos colores
custom_colors <- c("steelblue", "darkorange", "forestgreen", "firebrick")
# Generamos el Boxplot
ggplot(datos, aes(x = Med_Edad, y = Y, fill = Med_Edad)) +
geom_boxplot(width = 0.5, alpha = 0.7, outlier.shape = NA) +
geom_jitter(width = 0.2, height = 0, size = 3, alpha = 0.8) +
scale_fill_manual(values = custom_colors) +
labs(x = "Med & Edad", y = "Carga viral") +
ggtitle("Box Plot con Med & Edad") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10, face = "bold"),
legend.title = element_blank(),
legend.position = "none"
)
# Crear interacción entre factores
datos$Med_Edad <- interaction(datos$Med, datos$Edad)
# Definimos colores
custom_colors <- c("steelblue", "darkorange", "forestgreen", "firebrick")
# Generamos el Boxplot
ggplot(datos, aes(x = Med_Edad, y = Y, fill = Med_Edad)) +
geom_boxplot(width = 0.4, alpha = 0.7, outlier.shape = NA) +
geom_jitter(width = 0.2, height = 0, size = 3, alpha = 0.8) +
scale_fill_manual(values = custom_colors) +
labs(x = "Med & Edad", y = "Carga viral") +
ggtitle("Box Plot con Med & Edad") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10, face = "bold"),
legend.title = element_blank(),
legend.position = "none"
)
# Crear interacción entre factores
datos$Med_Edad <- interaction(datos$Med, datos$Edad)
# Definimos colores
custom_colors <- c("steelblue", "darkorange", "forestgreen", "firebrick")
# Generamos el Boxplot
ggplot(datos, aes(x = Med_Edad, y = Y, fill = Med_Edad)) +
geom_boxplot(width = 0.5, alpha = 0.7, outlier.shape = NA) +
geom_jitter(width = 0.2, height = 0, size = 3, alpha = 0.8) +
scale_fill_manual(values = custom_colors) +
labs(x = "Med & Edad", y = "Carga viral") +
ggtitle("Box Plot con Med & Edad") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10, face = "bold"),
legend.title = element_blank(),
legend.position = "none"
)
# Crear interacción entre factores
datos$Med_Edad <- interaction(datos$Med, datos$Edad)
# Definimos colores
custom_colors <- c("steelblue", "darkorange", "forestgreen", "firebrick")
# Generamos el Boxplot
ggplot(datos, aes(x = Med_Edad, y = Y, fill = Med_Edad)) +
geom_boxplot(width = 0.3, alpha = 0.5, outlier.shape = NA) +
geom_jitter(width = 0.2, height = 0, size = 3, alpha = 0.8) +
scale_fill_manual(values = custom_colors) +
labs(x = "Med & Edad", y = "Carga viral") +
ggtitle("Box Plot con Med & Edad") +
theme_minimal() +
theme(
plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10, face = "bold"),
legend.title = element_blank(),
legend.position = "none"
)
knitr::opts_chunk$set(echo = TRUE)
x=c(79, 93, 100, 105, 101, 96, 96, 109, 70, 71, 87)
y=c(123, 138, 154, 161, 155, 149, 152, 160, 117, 123, 138 )
Datos6=data.frame(cbind(x,y))
kable(t(Datos6)) %> %
kable_styling(bootstrap_options = "striped", full_width = F)
x=c(79, 93, 100, 105, 101, 96, 96, 109, 70, 71, 87)
y=c(123, 138, 154, 161, 155, 149, 152, 160, 117, 123, 138 )
Datos6=data.frame(cbind(x,y))
kable(t(Datos6)) %>%
kable_styling(bootstrap_options = "striped", full_width = F)
library(kableExtra)
library(kableExtra)
x=c(79, 93, 100, 105, 101, 96, 96, 109, 70, 71, 87)
y=c(123, 138, 154, 161, 155, 149, 152, 160, 117, 123, 138 )
Datos6=data.frame(cbind(x,y))
kable(t(Datos6)) %>%
kable_styling(bootstrap_options = "striped", full_width = F)
View(Datos6)
View(Datos6)
#Ajustamos nuestro modelo
fit<-lm(y~x, data = Datos6)
#Y mostramos el summary con stargazer
stargazer(fit)
summary(fit)
