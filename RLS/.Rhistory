#check_model(fit) #check_model() function of the performance package
nice_table(nice_assumptions(fit), col.format.p = 2:4)
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
#check_model(fit) #check_model() function of the performance package
nice_table(nice_assumptions(fit), col.format.p = 4:2)
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
#check_model(fit) #check_model() function of the performance package
nice_table(nice_assumptions(fit), col.format.p = 4:4)
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
#check_model(fit) #check_model() function of the performance package
nice_table(nice_assumptions(fit), col.format.p = 2:4)
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
#check_model(fit) #check_model() function of the performance package
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4)
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
#check_model(fit) #check_model() function of the performance package
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4)
table_nice
View(table_nice)
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
#check_model(fit) #check_model() function of the performance package
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4, fonts_ignore=TRUE)
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
#check_model(fit) #check_model() function of the performance package
table_nice<-nice_table(nice_assumptions(fit, fonts_ignore=TRUE), col.format.p = 2:4)
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
#check_model(fit) #check_model() function of the performance package
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4)
View(nice_assumptions(fit))
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4)
#nice_assumptions(fit)
table_tests
View(table_tests)
#nice_assumptions(fit)
tabulate(table_tests)
#nice_assumptions(fit)
table(table_tests)
nice_assumptions(fit)
#nice_assumptions(fit)
table_nice
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4, short=TRUE)
#nice_assumptions(fit)
table_nice
install.packages("report")
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc", "report"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
library(report)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4, short=TRUE)
#nice_assumptions(fit)
table_nice
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc", "report"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
library(report)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4, short=TRUE, width=0.5)
#nice_assumptions(fit)
table_nice
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc", "report"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
library(report)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4, short=TRUE, width=0.75)
#nice_assumptions(fit)
table_nice
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc", "report"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
library(report)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4, short=TRUE, width=0.5)
#nice_assumptions(fit)
table_nice
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc", "report"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
library(report)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit),  short=TRUE, width=0.5)
#nice_assumptions(fit)
table_nice
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc", "report"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
library(report)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4,stars=TRUE, short=TRUE, width=0.5)
#nice_assumptions(fit)
table_nice
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc", "report"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
library(report)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4,stars=TRUE, short=TRUE, width=0.5,
note = c("* p < .05, ** p < .01, *** p < .001"))
#nice_assumptions(fit)
table_nice
View(table_tests)
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc", "report"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
library(report)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
table_tests_fin<-table_tests$`Normality (Shapiro-Wilk)`+table_tests$`Homoscedasticity (Breusch-Pagan)`+table_tests$`Autocorrelation of residuals (Durbin-Watson)`
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4,stars=TRUE, short=TRUE, width=0.5,
note = c("* p < .05, ** p < .01, *** p < .001"))
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc", "report"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
library(report)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
table_tests_fin<-c(table_tests$`Normality (Shapiro-Wilk)`, table_tests$`Homoscedasticity (Breusch-Pagan)`, table_tests$`Autocorrelation of residuals (Durbin-Watson)`)
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4,stars=TRUE, short=TRUE, width=0.5,
note = c("* p < .05, ** p < .01, *** p < .001"))
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc", "report"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
library(report)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
table_tests_fin<-table_tests$`Normality (Shapiro-Wilk)`
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4,stars=TRUE, short=TRUE, width=0.5,
note = c("* p < .05, ** p < .01, *** p < .001"))
View(table_tests)
pkgs <- c(
"flextable", "performance", "see", "lmtest", "ggplot2",
"qqplotr", "ggrepel", "patchwork", "boot", "rempsyc", "report"
)
#install.packages(pkgs)
library(flextable)
library(performance)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
library(report)
#check_model(fit) #check_model() function of the performance package
table_tests<-nice_assumptions(fit)
table_tests_fin<-subset(table_tests, select = -c(Model,Diagnostic) )
set_flextable_defaults(fonts_ignore=TRUE)
table_nice<-nice_table(nice_assumptions(fit), col.format.p = 2:4,stars=TRUE, short=TRUE, width=0.5,
note = c("* p < .05, ** p < .01, *** p < .001"))
View(table_tests_fin)
#nice_assumptions(fit)
#table_nice
table_tests_fin
#nice_assumptions(fit)
#table_nice
table(table_tests_fin)
#nice_assumptions(fit)
#table_nice
(table_tests_fin)
View(table_tests_fin)
#nice_assumptions(fit)
#table_nice
kable(t(table_tests_fin)) %>%
kable_styling(bootstrap_options = "striped", full_width = F)
knitr::opts_chunk$set(echo = TRUE)
5+5
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(tidyverse)
library(stargazer)
library(performance)
library(flextable)
library(see)
library(lmtest)
library(qqplotr)
library(ggrepel)
library(patchwork)
library(boot)
library(rempsyc)
library(report)
library(multcomp)
x=c(79, 93, 100, 105, 101, 96, 96, 109, 70, 71, 87)
y=c(123, 138, 154, 161, 155, 149, 152, 160, 117, 123, 138 )
Datos6=data.frame(cbind(x,y))
kable(t(Datos6)) %>%
kable_styling(bootstrap_options = "striped", full_width = F)
#Ajustamos nuestro modelo
fit<-lm(y~x, data = Datos6)
#Y mostramos el summary con stargazer
stargazer(fit)
b0<-fit$coefficients[1]
b1<-fit$coefficients[2]
ggplot(Datos6, aes(x, y)) +
geom_point() +
geom_abline(intercept = b0, slope = b1) +
theme_bw()
par(mfrow = c(2, 2))
plot(fit)
par(mfrow = c(2, 2))
#####check_model() function of performance package: Graphs####
# return a list of single plots
diagnostic_plots <- plot(check_model(fit, panel = FALSE))
# linearity
diagnostic_plots[[2]]
# normally distributed residuals
diagnostic_plots[[5]] #6
# homoscedasticiy - homogeneity of variance
diagnostic_plots[[3]]
# influential observations - outliers
diagnostic_plots[[4]]
#nice_assumptions from package rempsyc
table_tests<-nice_assumptions(fit)
table_tests_fin<-subset(table_tests, select = -c(Model,Diagnostic) )
#nice_assumptions(fit)
#table_nice
kable(t(table_tests_fin)) %>%
kable_styling(bootstrap_options = "striped", full_width = F)
# Pruebas de hipótesis para beta1
Matriz=matrix(c(0,1), ncol=2, nrow=1)
c=1
#alternative: "two.sided" (default), "greater" or "less"
prueba1=glht(fit, linfct=Matriz, rhs=c, alternative="two.sided")
#summary(prueba1)
#cálculo del valor para un peso de 70
nuevo_y<-b0+b1*70
new.dat <- data.frame(x = c(70))
predict<-predict(fit, newdata = new.dat, interval = 'prediction',  level = 0.95)
#predict[3]
# Extract the prediction interval values
lower_limit <- predict[1, "lwr"]
predicted_value <- predict[1, "fit"]
upper_limit <- predict[1, "upr"]
# Print the prediction interval values
#cat("Lower Limit:", lower_limit, "\n")
#cat("Predicted Sales:", predicted_sales, "\n")
#cat("Upper Limit:", upper_limit, "\n")
# Plot the prediction interval on a graph
plot(Datos6$x, Datos6$y, main = "", xlab = "X", ylab = "Y", pch = 16)
# Add the regression line
abline(fit, col = "green")
# Add the predicted point
points(70, predicted_value, col = "red", pch = 16)
points(70, 145, col = "blue", pch = 16)
segments(70, lower_limit, 70, upper_limit, col = "red", lwd = 2)
